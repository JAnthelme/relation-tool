
==================== FINAL INTERFACE ====================
2016-09-03 15:14:03.639646 UTC

interface relat_8Cyn3M6UKgN11sASBif9n4:Relvar.Pretty 7103
  interface hash: 1e9ddfbe614dd1bfa84bec02e06782c0
  ABI hash: ede725e7ed29448eac2b73158fd3c390
  export-list hash: c12ef76cffa653ed544becd92a2f98d9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b22ebaa46bc8b537ef0b95187da6f134
  sig of: Nothing
  used TH splices: False
  where
exports:
  Relvar.Pretty.defParams
  Relvar.Pretty.Params{Relvar.Pretty.Params Relvar.Pretty.border_bot Relvar.Pretty.border_lft Relvar.Pretty.border_rgt Relvar.Pretty.border_top Relvar.Pretty.col_align Relvar.Pretty.col_width_min}
  Relvar.Pretty.Tabular|{Relvar.Pretty.render Relvar.Pretty.render' Relvar.Pretty.view Relvar.Pretty.view' Relvar.Pretty.viewAll Relvar.Pretty.viewAll'}
  Relvar.Pretty.BoxesText.Alignment{Relvar.Pretty.BoxesText.AlignCenter1 Relvar.Pretty.BoxesText.AlignCenter2 Relvar.Pretty.BoxesText.AlignFirst Relvar.Pretty.BoxesText.AlignLast}
module dependencies: Relvar Relvar.LSet Relvar.Pretty.BoxesText
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne*
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.ParserCombinators.ReadPrec 2590e0e0a57a86ac7c62727f4d868dd2
import  -/  base-4.8.2.0:Text.Read.Lex 724ca44ddd38ddc5f47a501d62736c26
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set 7116dff3002cb8f8fc1c63ac63f4ea50
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base 681af891dffe392ee938c8b49d69f236
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Relvar c43138de2e31a037b92dfb3f1ff8bcdd
  exports: c77214d0a1ae15d1167f75a2836fdb82
  A 7f1db1f6ec5b2af773cabb5b32739423
  B 09884aca53c81c9a8a675173b9059601
  C 1205911eaf10f5979f8614b3e70e8509
  D 94b592089becf58c64fedb3bba3769c6
  Elem 739ead08fede687ca65196edf4c545f4
  I 2850aa1e6707f6b46413d053b353592b
  Nil bbf6812b23170f2f9f6afe07e0fda3ed
  R 25c43790b0e5fc89dd368d744ae1c648
  Relvar 739ead08fede687ca65196edf4c545f4
  Row 739ead08fede687ca65196edf4c545f4
  S 959b55bc7d4247fe7a618e7b4e801360
  T a2cd3d567b05a3881634e091cb03854c
  Table d68f3e08edd39812aceff63f53d75233
  dee df53ccc7b8be969c0d24661186c25521
  dum c3e073e8fa5ef33016d825848a4ef9c6
  header 1e205cf57b262b4e987e5f3f40a8267e
  rdata a4b815bb45a08feacc674ce38233c30e
  tdata 27c8885d02a6d31374bc1986a1dda559
import  -/  Relvar.LSet e65ac2554d77b7defb57213d61690388
  exports: e67b13b4f199227347786d8a9c9bc6fd
  labels 0d22c6fd60f0fac3138012859c8b8326
  values 5a9b121435d07343f80ed3a2b0ce716a
import  -/  Relvar.Pretty.BoxesText 28358662ba48c1326c1faa3396bc8fdf
  exports: e733078d63c949f06f5eff18a2579972
  AlignCenter1 4f965529fff0da1ef8cc154c8bb9ebda
  AlignCenter2 abe54b175a2ba608fba828804e883a41
  AlignFirst 4998503d1544c829cbd585e0655cd796
  AlignLast 39f01762813dd3a0b3fae44878aebd02
  Alignment 9c42efabc3e0d6069b5f643e776cfdb2
  Box 1209fdc3400ed5df9c18be803fee1ba3
  alignVert 142efc16315ed7550eb4306748840ef2
  cols acf700943a4c3fc9b1d4033e7b7c7d11
  left 1ce9839715ce9a8a29cd06ff8848f489
  printBox a162c23645d60bd718f6fc93166a96ac
  punctuateH e8faa6688ae80102649cb8808a81406f
  punctuateV a85fb7665b03335f682d4bbbd4d78eb0
  render 1de8f89994ccb52988856398efed48ef
  rows 5eb341d4c1f9512d4634587591012bf7
  text 4a6e93b5cb9f8ffec760359fba015f2b
  top d8635a8a208c2ceb52ca6ce16eecf4fa
  vcat 750a1bf82ca20b1d1d675d639aed9a67
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.IO 4cee1d85a3c7d8e2e10b21ed89777999
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
54f28391905faed78b55d22fb7f9be0b
  $fEqParams :: GHC.Classes.Eq Relvar.Pretty.Params
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Relvar.Pretty.Params
                  Relvar.Pretty.$fEqParams_$c==
                  Relvar.Pretty.$fEqParams_$c/= -}
54f28391905faed78b55d22fb7f9be0b
  $fEqParams_$c/= ::
    Relvar.Pretty.Params -> Relvar.Pretty.Params -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a7 :: Relvar.Pretty.Params b :: Relvar.Pretty.Params ->
                 case Relvar.Pretty.$fEqParams_$c== a7 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
54f28391905faed78b55d22fb7f9be0b
  $fEqParams_$c== ::
    Relvar.Pretty.Params -> Relvar.Pretty.Params -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)><S(SLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Relvar.Pretty.Params w1 :: Relvar.Pretty.Params ->
                 case w of ww { Relvar.Pretty.Params ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case ww1 of ww7 { GHC.Types.I# ww8 ->
                 case w1 of ww9 { Relvar.Pretty.Params ww10 ww11 ww12 ww13 ww14 ww15 ->
                 case ww10 of ww16 { GHC.Types.I# ww17 ->
                 Relvar.Pretty.$w$c==
                   ww8
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww17
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15 } } } }) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams :: GHC.Read.Read Relvar.Pretty.Params
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Relvar.Pretty.Params
                  Relvar.Pretty.$fReadParams_$s$dmreadsPrec
                  Relvar.Pretty.$fReadParams_$sreadListDefault
                  Relvar.Pretty.$fReadParams_$creadPrec
                  Relvar.Pretty.$fReadParams_$creadListPrec -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Relvar.Pretty.Params] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [Relvar.Pretty.Params]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ Relvar.Pretty.Params
                   Relvar.Pretty.$fReadParams2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <Relvar.Pretty.Params>_R))
                   @ b
                   eta1) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Relvar.Pretty.Params
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Relvar.Pretty.Params
                   Relvar.Pretty.$fReadParams3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <Relvar.Pretty.Params>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <Relvar.Pretty.Params>_R)))) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Relvar.Pretty.Params -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   w1 :: Relvar.Pretty.Params -> Text.ParserCombinators.ReadP.P b ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Relvar.Pretty.$wa ww1 @ b w1 }) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Relvar.Pretty.Params]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fReadParams1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[Relvar.Pretty.Params]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[Relvar.Pretty.Params]>_R))) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Relvar.Pretty.Params
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fReadParams2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <Relvar.Pretty.Params>_R)) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Relvar.Pretty.Params
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ Relvar.Pretty.Params
                   Relvar.Pretty.$fReadParams_$creadPrec
                   eta) -}
54f28391905faed78b55d22fb7f9be0b
  $fReadParams_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [Relvar.Pretty.Params]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [Relvar.Pretty.Params]
                   ((Relvar.Pretty.$fReadParams_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[Relvar.Pretty.Params]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[Relvar.Pretty.Params]>_R)
                      @ [Relvar.Pretty.Params]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [Relvar.Pretty.Params]))) -}
54f28391905faed78b55d22fb7f9be0b
  $fShowParams :: GHC.Show.Show Relvar.Pretty.Params
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Relvar.Pretty.Params
                  Relvar.Pretty.$fShowParams_$cshowsPrec
                  Relvar.Pretty.$fShowParams_$cshow
                  Relvar.Pretty.$fShowParams_$cshowList -}
54f28391905faed78b55d22fb7f9be0b
  $fShowParams1 :: Relvar.Pretty.Params -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Relvar.Pretty.Params w1 :: GHC.Base.String ->
                 case w of ww { Relvar.Pretty.Params ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Relvar.Pretty.$w$cshowsPrec 0 ww1 ww2 ww3 ww4 ww5 ww6 w1 }) -}
54f28391905faed78b55d22fb7f9be0b
  $fShowParams_$cshow :: Relvar.Pretty.Params -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Relvar.Pretty.Params ->
                 Relvar.Pretty.$fShowParams_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
54f28391905faed78b55d22fb7f9be0b
  $fShowParams_$cshowList :: [Relvar.Pretty.Params] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Relvar.Pretty.Params
                   Relvar.Pretty.$fShowParams1) -}
54f28391905faed78b55d22fb7f9be0b
  $fShowParams_$cshowsPrec ::
    GHC.Types.Int -> Relvar.Pretty.Params -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S,1*U(U)><S,1*U(1*U(U),1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Relvar.Pretty.Params
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Relvar.Pretty.Params ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Relvar.Pretty.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 w2 } }) -}
da0c4c84e7ba0292962331955387f6a8
  $fTabularRelvar :: Relvar.Pretty.Tabular Relvar.Relvar
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Relvar.Relvar
                  Relvar.Pretty.$fTabularRelvar_$crender'
                  Relvar.Pretty.$fTabularRelvar_$crender
                  Relvar.Pretty.$fTabularRelvar_$cview'
                  Relvar.Pretty.$fTabularRelvar_$cview
                  Relvar.Pretty.$fTabularRelvar_$cviewAll'
                  Relvar.Pretty.$fTabularRelvar_$cviewAll -}
a30ba8d71087199f1643e0886a0d0f78
  $fTabularRelvar1 ::
    Relvar.Relvar
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ r :: Relvar.Relvar
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularRelvar3
                   r
                   Relvar.Pretty.defParams
                   Relvar.Pretty.$fTabularRelvar2
                   eta) -}
3b6b33eaaafb2bd68ce45b5cc907d012
  $fTabularRelvar2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0 9223372036854775807) -}
6e8fb3c1c45758c3336e5caf2adb974f
  $fTabularRelvar3 ::
    Relvar.Relvar
    -> Relvar.Pretty.Params
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(SL),1*U(U,U)><L,U(U(U),A,U,A,A,U)><L,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: Relvar.Relvar
                   w1 :: Relvar.Pretty.Params
                   w2 :: [GHC.Types.Int]
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of ww { Relvar.Relvar ww1 ww2 ->
                 Relvar.Pretty.$wa1 ww1 ww2 w1 w2 w3 }) -}
7c67b35462fe04cd9fecca45d4ca1979
  $fTabularRelvar4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "- dee -"#) -}
751e968b286607a5b17a4f827c6fe4fb
  $fTabularRelvar5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "- dum -"#) -}
d58b0b07c43217c52cc339a31429eb1d
  $fTabularRelvar6 ::
    Relvar.Relvar
    -> Relvar.Pretty.Params
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,U(U(U),A,U,A,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ r :: Relvar.Relvar
                   pm :: Relvar.Pretty.Params
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularRelvar3
                   r
                   pm
                   Relvar.Pretty.$fTabularRelvar2
                   eta) -}
511fdfab5ba9f991b085a37e50456d25
  $fTabularRelvar7 ::
    Relvar.Relvar
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ r :: Relvar.Relvar
                   ixs :: [GHC.Types.Int]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularRelvar3
                   r
                   Relvar.Pretty.defParams
                   ixs
                   eta) -}
5a7f24a3d2562d211fc12e68b0eedbf8
  $fTabularRelvar_$crender ::
    Relvar.Relvar -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: (\ r :: Relvar.Relvar ->
                 case Relvar.Pretty.$wtable
                        Relvar.Pretty.defParams
                        (Relvar.Pretty.tableBox Relvar.Pretty.defParams r)
                        Relvar.Pretty.$fTabularRelvar2 of ww { (#,,#) ww1 ww2 ww3 ->
                 Relvar.Pretty.BoxesText.$wrender ww1 ww2 ww3 }) -}
e2a671e88368133fa6c2966968958177
  $fTabularRelvar_$crender' ::
    Relvar.Relvar
    -> Relvar.Pretty.Params
    -> [GHC.Types.Int]
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U(U,U)><L,U(U(U),A,U,A,A,U)><S,1*U>,
     Unfolding: (\ r :: Relvar.Relvar
                   pm :: Relvar.Pretty.Params
                   ixs :: [GHC.Types.Int] ->
                 case Relvar.Pretty.$wtable
                        pm
                        (Relvar.Pretty.tableBox pm r)
                        ixs of ww { (#,,#) ww1 ww2 ww3 ->
                 Relvar.Pretty.BoxesText.$wrender ww1 ww2 ww3 }) -}
2b46b0729a4ef9728b82948463805676
  $fTabularRelvar_$cview ::
    Relvar.Relvar -> [GHC.Types.Int] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularRelvar7
                  `cast`
                (<Relvar.Relvar>_R
                 ->_R <[GHC.Types.Int]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
988576f5a8801348a925724f1aa099d4
  $fTabularRelvar_$cview' ::
    Relvar.Relvar
    -> Relvar.Pretty.Params -> [GHC.Types.Int] -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(SL),1*U(U,U)><L,U(U(U),A,U,A,A,U)><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularRelvar3
                  `cast`
                (<Relvar.Relvar>_R
                 ->_R <Relvar.Pretty.Params>_R
                 ->_R <[GHC.Types.Int]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
be168379bb59c1540a66033a97f5b851
  $fTabularRelvar_$cviewAll :: Relvar.Relvar -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularRelvar1
                  `cast`
                (<Relvar.Relvar>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
a507fae12371dd7222df959e50ab0051
  $fTabularRelvar_$cviewAll' ::
    Relvar.Relvar -> Relvar.Pretty.Params -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U)><L,U(U(U),A,U,A,A,U)>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularRelvar6
                  `cast`
                (<Relvar.Relvar>_R
                 ->_R <Relvar.Pretty.Params>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
da42102b00f2ecbd7c4dbe29c1ffa34f
  $fTabularRelvar_go5 ::
    [[Relvar.Elem]]
    -> Data.Set.Base.Set
         (Data.Set.Base.Set (GHC.Base.String, Relvar.Elem))
    -> [[Relvar.Elem]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
da0c4c84e7ba0292962331955387f6a8
  $fTabularTable :: Relvar.Pretty.Tabular Relvar.Table
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Relvar.Table
                  Relvar.Pretty.$fTabularTable_$crender'
                  Relvar.Pretty.$fTabularTable_$crender
                  Relvar.Pretty.$fTabularTable_$cview'
                  Relvar.Pretty.$fTabularTable_$cview
                  Relvar.Pretty.$fTabularTable_$cviewAll'
                  Relvar.Pretty.$fTabularTable_$cviewAll -}
a926d8489c7b78c06eccc8a8ab9a0c86
  $fTabularTable1 ::
    Relvar.Table
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ t2 :: Relvar.Table
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularTable2
                   t2
                   Relvar.Pretty.defParams
                   Relvar.Pretty.$fTabularRelvar2
                   eta) -}
782392c4559ce4219eaed87955e9bdac
  $fTabularTable2 ::
    Relvar.Table
    -> Relvar.Pretty.Params
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(1*U,1*U)><L,U(U(U),A,U,A,A,U)><L,1*U><L,U>,
     Unfolding: (\ tbl :: Relvar.Table
                   pm :: Relvar.Pretty.Params
                   ixs :: [GHC.Types.Int]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Data.Text.IO.appendFile2
                   GHC.IO.Handle.FD.stdout
                   (case Relvar.Pretty.$wtable
                           pm
                           (Relvar.Pretty.tableBox' pm (Relvar.header tbl) (Relvar.tdata tbl))
                           ixs of ww { (#,,#) ww1 ww2 ww3 ->
                    Relvar.Pretty.BoxesText.$wrender ww1 ww2 ww3 })
                   eta) -}
b3e47b024c23f337f38bf26d8333076f
  $fTabularTable3 ::
    Relvar.Table
    -> Relvar.Pretty.Params
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,U(U(U),A,U,A,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ t2 :: Relvar.Table
                   pm :: Relvar.Pretty.Params
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularTable2
                   t2
                   pm
                   Relvar.Pretty.$fTabularRelvar2
                   eta) -}
b7fd87785505377a46b2c02a8e198ff7
  $fTabularTable4 ::
    Relvar.Table
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ t2 :: Relvar.Table
                   ixs :: [GHC.Types.Int]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Relvar.Pretty.$fTabularTable2
                   t2
                   Relvar.Pretty.defParams
                   ixs
                   eta) -}
6028701b8f67d319b4d6438952e668ea
  $fTabularTable_$crender :: Relvar.Table -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ t2 :: Relvar.Table ->
                 Relvar.Pretty.$fTabularTable_$crender'
                   t2
                   Relvar.Pretty.defParams
                   Relvar.Pretty.$fTabularRelvar2) -}
8c5a665159dd957c1398344f217c89a4
  $fTabularTable_$crender' ::
    Relvar.Table
    -> Relvar.Pretty.Params
    -> [GHC.Types.Int]
    -> Data.Text.Internal.Text
  {- Arity: 3,
     Strictness: <L,U(1*U,1*U)><L,U(U(U),A,U,A,A,U)><S,1*U>,
     Unfolding: (\ tbl :: Relvar.Table
                   pm :: Relvar.Pretty.Params
                   ixs :: [GHC.Types.Int] ->
                 case Relvar.Pretty.$wtable
                        pm
                        (Relvar.Pretty.tableBox' pm (Relvar.header tbl) (Relvar.tdata tbl))
                        ixs of ww { (#,,#) ww1 ww2 ww3 ->
                 Relvar.Pretty.BoxesText.$wrender ww1 ww2 ww3 }) -}
3e8285e6259e1c6e9b2fee0aa7e419e9
  $fTabularTable_$cview ::
    Relvar.Table -> [GHC.Types.Int] -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularTable4
                  `cast`
                (<Relvar.Table>_R
                 ->_R <[GHC.Types.Int]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7873de9aa63f30feb4fb01e21dc54b7c
  $fTabularTable_$cview' ::
    Relvar.Table
    -> Relvar.Pretty.Params -> [GHC.Types.Int] -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(1*U,1*U)><L,U(U(U),A,U,A,A,U)><L,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularTable2
                  `cast`
                (<Relvar.Table>_R
                 ->_R <Relvar.Pretty.Params>_R
                 ->_R <[GHC.Types.Int]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1deba3dd76833cea6c75b8fb0aac13da
  $fTabularTable_$cviewAll :: Relvar.Table -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U)>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularTable1
                  `cast`
                (<Relvar.Table>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
a70b6610d0e490eb5d642048383b126c
  $fTabularTable_$cviewAll' ::
    Relvar.Table -> Relvar.Pretty.Params -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U,U)><L,U(U(U),A,U,A,A,U)>,
     Unfolding: InlineRule (0, True, True)
                Relvar.Pretty.$fTabularTable3
                  `cast`
                (<Relvar.Table>_R
                 ->_R <Relvar.Pretty.Params>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
9ddad338af4fbab09d22002fcb781757
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Relvar.Pretty.BoxesText.Alignment
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Relvar.Pretty.BoxesText.Alignment
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Types.Bool
                   ww2 :: GHC.Types.Bool
                   ww3 :: GHC.Types.Bool
                   ww4 :: GHC.Types.Bool
                   ww5 :: Relvar.Pretty.BoxesText.Alignment
                   ww6 :: GHC.Prim.Int#
                   ww7 :: GHC.Types.Bool
                   ww8 :: GHC.Types.Bool
                   ww9 :: GHC.Types.Bool
                   ww10 :: GHC.Types.Bool
                   ww11 :: Relvar.Pretty.BoxesText.Alignment ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww6) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> let {
                        $j :: GHC.Prim.Void# -> GHC.Types.Bool
                          {- Arity: 1, Strictness: <L,A> -}
                        = \ w :: GHC.Prim.Void#[OneShot] ->
                          let {
                            $j1 :: GHC.Prim.Void# -> GHC.Types.Bool
                              {- Arity: 1, Strictness: <L,A> -}
                            = \ w1 :: GHC.Prim.Void#[OneShot] ->
                              let {
                                $j2 :: GHC.Prim.Void# -> GHC.Types.Bool
                                  {- Arity: 1, Strictness: <L,A> -}
                                = \ w2 :: GHC.Prim.Void#[OneShot] ->
                                  case ww4 of wild1 {
                                    GHC.Types.False
                                    -> case ww10 of wild2 {
                                         GHC.Types.False
                                         -> Relvar.Pretty.BoxesText.$fEqAlignment_$c== ww5 ww11
                                         GHC.Types.True -> GHC.Types.False }
                                    GHC.Types.True
                                    -> case ww10 of wild2 {
                                         GHC.Types.False -> GHC.Types.False
                                         GHC.Types.True
                                         -> Relvar.Pretty.BoxesText.$fEqAlignment_$c== ww5 ww11 } }
                              } in
                              case ww3 of wild1 {
                                GHC.Types.False
                                -> case ww9 of wild2 {
                                     GHC.Types.False -> $j2 GHC.Prim.void#
                                     GHC.Types.True -> GHC.Types.False }
                                GHC.Types.True
                                -> case ww9 of wild2 {
                                     GHC.Types.False -> GHC.Types.False
                                     GHC.Types.True -> $j2 GHC.Prim.void# } }
                          } in
                          case ww2 of wild1 {
                            GHC.Types.False
                            -> case ww8 of wild2 {
                                 GHC.Types.False -> $j1 GHC.Prim.void#
                                 GHC.Types.True -> GHC.Types.False }
                            GHC.Types.True
                            -> case ww8 of wild2 {
                                 GHC.Types.False -> GHC.Types.False
                                 GHC.Types.True -> $j1 GHC.Prim.void# } }
                      } in
                      case ww1 of wild1 {
                        GHC.Types.False
                        -> case ww7 of wild2 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True -> GHC.Types.False }
                        GHC.Types.True
                        -> case ww7 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> $j GHC.Prim.void# } } }) -}
dfbf9ee2426e1e22a5f6d24b0f680e8c
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Relvar.Pretty.BoxesText.Alignment
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 8,
     Strictness: <L,U><L,1*U(U)><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
54f28391905faed78b55d22fb7f9be0b
  $wa ::
    GHC.Prim.Int#
    -> forall b.
       (Relvar.Pretty.Params -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,C(U)>, Inline: [0] -}
faffe1357aeae34b1b98695656f2344f
  $wa1 ::
    Relvar.Attributes
    -> Data.Set.Base.Set Relvar.Row
    -> Relvar.Pretty.Params
    -> [GHC.Types.Int]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U(U(U),A,U,A,A,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: Relvar.Attributes
                   ww1 :: Data.Set.Base.Set Relvar.Row
                   w :: Relvar.Pretty.Params
                   w1 :: [GHC.Types.Int]
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Relvar.$w$c== ww ww1 Relvar.dee2 Relvar.dee1 of wild {
                   GHC.Types.False
                   -> case Relvar.$w$c==
                             ww
                             ww1
                             Relvar.dee2
                             (Data.Set.Base.Tip @ Relvar.Row) of wild1 {
                        GHC.Types.False
                        -> Data.Text.IO.appendFile2
                             GHC.IO.Handle.FD.stdout
                             (case Relvar.Pretty.$wtable
                                     w
                                     (Relvar.Pretty.tableBox'
                                        w
                                        (Relvar.LSet.$w$clabels @ Data.Typeable.Internal.TypeRep ww)
                                        (Relvar.Pretty.$fTabularRelvar_go5
                                           (GHC.Types.[] @ [Relvar.Elem])
                                           ww1))
                                     w1 of ww2 { (#,,#) ww3 ww4 ww5 ->
                              Relvar.Pretty.BoxesText.$wrender ww3 ww4 ww5 })
                             w2
                        GHC.Types.True
                        -> GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             Relvar.Pretty.$fTabularRelvar5
                             GHC.Types.True
                             w2 }
                   GHC.Types.True
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Relvar.Pretty.$fTabularRelvar4
                        GHC.Types.True
                        w2 }) -}
e8a84dbe458ad0bfd47f3dedd00c5afc
  $wtable ::
    Relvar.Pretty.Params
    -> [[Relvar.Pretty.BoxesText.Box]]
    -> [GHC.Types.Int]
    -> (# GHC.Types.Int,
          GHC.Types.Int,
          Relvar.Pretty.BoxesText.Content #)
  {- Arity: 3, Strictness: <L,U(U(U),A,U,A,A,U)><L,U><S,1*U>,
     Inline: [0] -}
54f28391905faed78b55d22fb7f9be0b
  data Params
    = Params {col_width_min :: GHC.Types.Int,
              border_top :: GHC.Types.Bool,
              border_bot :: GHC.Types.Bool,
              border_lft :: GHC.Types.Bool,
              border_rgt :: GHC.Types.Bool,
              col_align :: Relvar.Pretty.BoxesText.Alignment}
da0c4c84e7ba0292962331955387f6a8
  class Tabular a where
    render' ::
      a
      -> Relvar.Pretty.Params
      -> [GHC.Types.Int]
      -> Data.Text.Internal.Text
    render :: a -> Data.Text.Internal.Text
    view' ::
      a -> Relvar.Pretty.Params -> [GHC.Types.Int] -> GHC.Types.IO ()
    view :: a -> [GHC.Types.Int] -> GHC.Types.IO ()
    viewAll' :: a -> Relvar.Pretty.Params -> GHC.Types.IO ()
    viewAll :: a -> GHC.Types.IO ()
7a48a46c589eec20d63d65fe1bcc9330
  border_bot :: Relvar.Pretty.Params -> GHC.Types.Bool
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
b5f140dad2bc7c94a80d9ebc3d8a48fe
  border_lft :: Relvar.Pretty.Params -> GHC.Types.Bool
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
cd000f868484abda84e64674e845edc7
  border_rgt :: Relvar.Pretty.Params -> GHC.Types.Bool
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
5aed5e95c86add80e4534d9eb6be14a5
  border_top :: Relvar.Pretty.Params -> GHC.Types.Bool
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
82891d18d5cb496d69881acc2730df5e
  col_align ::
    Relvar.Pretty.Params -> Relvar.Pretty.BoxesText.Alignment
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
e9f9fe4e75d40e0fdebcfc3fca07790a
  col_width_min :: Relvar.Pretty.Params -> GHC.Types.Int
  RecSel Relvar.Pretty.Params
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Relvar.Pretty.Params ->
                 case ds of wild { Relvar.Pretty.Params ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
33e8e6a92edb4d22ce9d77bb95759c50
  defParams :: Relvar.Pretty.Params
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Relvar.Pretty.Params
                   Relvar.Pretty.defParams1
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   Relvar.Pretty.BoxesText.AlignFirst) -}
2cc2f72e0bafc54c4a6727263f1aecd5
  defParams1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10) -}
b0fa90b03057393b44f1beac8099c419
  tableBox ::
    Relvar.Pretty.Params
    -> Relvar.Relvar -> [[Relvar.Pretty.BoxesText.Box]]
  {- Arity: 2, Strictness: <L,U(U(U),A,U,A,A,U)><L,U(1*U,1*U)>,
     Unfolding: (\ pm :: Relvar.Pretty.Params r :: Relvar.Relvar ->
                 Relvar.Pretty.tableBox'
                   pm
                   (Relvar.$fLabelOpRelvar_$clabels r)
                   (case r of wild { Relvar.Relvar ds1 ds2 ->
                    Relvar.Pretty.$fTabularRelvar_go5
                      (GHC.Types.[] @ [Relvar.Elem])
                      ds2 })) -}
825649e0e3488ba963fe7211c0fe704f
  tableBox' ::
    Relvar.Pretty.Params
    -> [GHC.Base.String]
    -> [[Relvar.Elem]]
    -> [[Relvar.Pretty.BoxesText.Box]]
  {- Arity: 3, Strictness: <L,U(U(U),A,U,A,A,U)><L,1*U><L,1*U> -}
instance GHC.Classes.Eq [Relvar.Pretty.Params]
  = Relvar.Pretty.$fEqParams
instance GHC.Read.Read [Relvar.Pretty.Params]
  = Relvar.Pretty.$fReadParams
instance GHC.Show.Show [Relvar.Pretty.Params]
  = Relvar.Pretty.$fShowParams
instance Relvar.Pretty.Tabular [Relvar.Relvar]
  = Relvar.Pretty.$fTabularRelvar
instance Relvar.Pretty.Tabular [Relvar.Table]
  = Relvar.Pretty.$fTabularTable
"SPEC/Relvar.Pretty $dmreadsPrec @ Params" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                       Relvar.Pretty.Params
  GHC.Read.$dmreadsPrec @ Relvar.Pretty.Params $dRead
  = Relvar.Pretty.$fReadParams_$s$dmreadsPrec
"SPEC/Relvar.Pretty readListDefault @ Params" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                          Relvar.Pretty.Params
  GHC.Read.readListDefault @ Relvar.Pretty.Params $dRead
  = Relvar.Pretty.$fReadParams_$sreadListDefault
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

